// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"cloud.google.com/go/bigquery"
	"context"
	"github.com/MadHive/google-cloud-go-testing/bigquery/bqiface"
	"sync"
)

// Ensure, that CopierMock does implement bqiface.Copier.
// If this is not the case, regenerate this file with moq.
var _ bqiface.Copier = &CopierMock{}

// CopierMock is a mock implementation of bqiface.Copier.
//
//     func TestSomethingThatUsesCopier(t *testing.T) {
//
//         // make and configure a mocked bqiface.Copier
//         mockedCopier := &CopierMock{
//             JobIDConfigFunc: func() *bigquery.JobIDConfig {
// 	               panic("mock out the JobIDConfig method")
//             },
//             RunFunc: func(in1 context.Context) (bqiface.Job, error) {
// 	               panic("mock out the Run method")
//             },
//             SetCopyConfigFunc: func(in1 bqiface.CopyConfig)  {
// 	               panic("mock out the SetCopyConfig method")
//             },
//         }
//
//         // use mockedCopier in code that requires bqiface.Copier
//         // and then make assertions.
//
//     }
type CopierMock struct {
	// JobIDConfigFunc mocks the JobIDConfig method.
	JobIDConfigFunc func() *bigquery.JobIDConfig

	// RunFunc mocks the Run method.
	RunFunc func(in1 context.Context) (bqiface.Job, error)

	// SetCopyConfigFunc mocks the SetCopyConfig method.
	SetCopyConfigFunc func(in1 bqiface.CopyConfig)

	// calls tracks calls to the methods.
	calls struct {
		// JobIDConfig holds details about calls to the JobIDConfig method.
		JobIDConfig []struct {
		}
		// Run holds details about calls to the Run method.
		Run []struct {
			// In1 is the in1 argument value.
			In1 context.Context
		}
		// SetCopyConfig holds details about calls to the SetCopyConfig method.
		SetCopyConfig []struct {
			// In1 is the in1 argument value.
			In1 bqiface.CopyConfig
		}
	}
	lockJobIDConfig   sync.RWMutex
	lockRun           sync.RWMutex
	lockSetCopyConfig sync.RWMutex
}

// JobIDConfig calls JobIDConfigFunc.
func (mock *CopierMock) JobIDConfig() *bigquery.JobIDConfig {
	if mock.JobIDConfigFunc == nil {
		panic("CopierMock.JobIDConfigFunc: method is nil but Copier.JobIDConfig was just called")
	}
	callInfo := struct {
	}{}
	mock.lockJobIDConfig.Lock()
	mock.calls.JobIDConfig = append(mock.calls.JobIDConfig, callInfo)
	mock.lockJobIDConfig.Unlock()
	return mock.JobIDConfigFunc()
}

// JobIDConfigCalls gets all the calls that were made to JobIDConfig.
// Check the length with:
//     len(mockedCopier.JobIDConfigCalls())
func (mock *CopierMock) JobIDConfigCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockJobIDConfig.RLock()
	calls = mock.calls.JobIDConfig
	mock.lockJobIDConfig.RUnlock()
	return calls
}

// Run calls RunFunc.
func (mock *CopierMock) Run(in1 context.Context) (bqiface.Job, error) {
	if mock.RunFunc == nil {
		panic("CopierMock.RunFunc: method is nil but Copier.Run was just called")
	}
	callInfo := struct {
		In1 context.Context
	}{
		In1: in1,
	}
	mock.lockRun.Lock()
	mock.calls.Run = append(mock.calls.Run, callInfo)
	mock.lockRun.Unlock()
	return mock.RunFunc(in1)
}

// RunCalls gets all the calls that were made to Run.
// Check the length with:
//     len(mockedCopier.RunCalls())
func (mock *CopierMock) RunCalls() []struct {
	In1 context.Context
} {
	var calls []struct {
		In1 context.Context
	}
	mock.lockRun.RLock()
	calls = mock.calls.Run
	mock.lockRun.RUnlock()
	return calls
}

// SetCopyConfig calls SetCopyConfigFunc.
func (mock *CopierMock) SetCopyConfig(in1 bqiface.CopyConfig) {
	if mock.SetCopyConfigFunc == nil {
		panic("CopierMock.SetCopyConfigFunc: method is nil but Copier.SetCopyConfig was just called")
	}
	callInfo := struct {
		In1 bqiface.CopyConfig
	}{
		In1: in1,
	}
	mock.lockSetCopyConfig.Lock()
	mock.calls.SetCopyConfig = append(mock.calls.SetCopyConfig, callInfo)
	mock.lockSetCopyConfig.Unlock()
	mock.SetCopyConfigFunc(in1)
}

// SetCopyConfigCalls gets all the calls that were made to SetCopyConfig.
// Check the length with:
//     len(mockedCopier.SetCopyConfigCalls())
func (mock *CopierMock) SetCopyConfigCalls() []struct {
	In1 bqiface.CopyConfig
} {
	var calls []struct {
		In1 bqiface.CopyConfig
	}
	mock.lockSetCopyConfig.RLock()
	calls = mock.calls.SetCopyConfig
	mock.lockSetCopyConfig.RUnlock()
	return calls
}
