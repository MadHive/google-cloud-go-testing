// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"github.com/MadHive/google-cloud-go-testing/bigquery/bqiface"
	"google.golang.org/api/iterator"
	"sync"
)

// Ensure, that TableIteratorMock does implement bqiface.TableIterator.
// If this is not the case, regenerate this file with moq.
var _ bqiface.TableIterator = &TableIteratorMock{}

// TableIteratorMock is a mock implementation of bqiface.TableIterator.
//
//     func TestSomethingThatUsesTableIterator(t *testing.T) {
//
//         // make and configure a mocked bqiface.TableIterator
//         mockedTableIterator := &TableIteratorMock{
//             NextFunc: func() (bqiface.Table, error) {
// 	               panic("mock out the Next method")
//             },
//             PageInfoFunc: func() *iterator.PageInfo {
// 	               panic("mock out the PageInfo method")
//             },
//         }
//
//         // use mockedTableIterator in code that requires bqiface.TableIterator
//         // and then make assertions.
//
//     }
type TableIteratorMock struct {
	// NextFunc mocks the Next method.
	NextFunc func() (bqiface.Table, error)

	// PageInfoFunc mocks the PageInfo method.
	PageInfoFunc func() *iterator.PageInfo

	// calls tracks calls to the methods.
	calls struct {
		// Next holds details about calls to the Next method.
		Next []struct {
		}
		// PageInfo holds details about calls to the PageInfo method.
		PageInfo []struct {
		}
	}
	lockNext     sync.RWMutex
	lockPageInfo sync.RWMutex
}

// Next calls NextFunc.
func (mock *TableIteratorMock) Next() (bqiface.Table, error) {
	if mock.NextFunc == nil {
		panic("TableIteratorMock.NextFunc: method is nil but TableIterator.Next was just called")
	}
	callInfo := struct {
	}{}
	mock.lockNext.Lock()
	mock.calls.Next = append(mock.calls.Next, callInfo)
	mock.lockNext.Unlock()
	return mock.NextFunc()
}

// NextCalls gets all the calls that were made to Next.
// Check the length with:
//     len(mockedTableIterator.NextCalls())
func (mock *TableIteratorMock) NextCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockNext.RLock()
	calls = mock.calls.Next
	mock.lockNext.RUnlock()
	return calls
}

// PageInfo calls PageInfoFunc.
func (mock *TableIteratorMock) PageInfo() *iterator.PageInfo {
	if mock.PageInfoFunc == nil {
		panic("TableIteratorMock.PageInfoFunc: method is nil but TableIterator.PageInfo was just called")
	}
	callInfo := struct {
	}{}
	mock.lockPageInfo.Lock()
	mock.calls.PageInfo = append(mock.calls.PageInfo, callInfo)
	mock.lockPageInfo.Unlock()
	return mock.PageInfoFunc()
}

// PageInfoCalls gets all the calls that were made to PageInfo.
// Check the length with:
//     len(mockedTableIterator.PageInfoCalls())
func (mock *TableIteratorMock) PageInfoCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockPageInfo.RLock()
	calls = mock.calls.PageInfo
	mock.lockPageInfo.RUnlock()
	return calls
}
